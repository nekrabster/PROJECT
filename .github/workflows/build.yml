name: Build Windows EXE with Nuitka (Clang + LTO)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Python 3.13 (–∫–µ—à pip)
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade nuitka

      - name: üß∞ Setup MSVC Dev Cmd (–¥–ª—è —Å—Ä–µ–¥—ã —Å–±–æ—Ä–∫–∏)
        uses: ilammy/msvc-dev-cmd@v1

      - name: ‚öôÔ∏è Install LLVM/Clang 17
        uses: egor-tensin/setup-clang@v1
        with:
          version: 17

      - name: üîß Build .exe with Nuitka (Clang + LTO)
        shell: pwsh
        env:
          PYTHONIOENCODING: "utf-8"
          PYTHONLEGACYWINDOWSSTDIO: "utf-8"
          CC: "clang-cl"
          CXX: "clang-cl"
        run: |
          python -m nuitka main.py `
            --onefile `
            --standalone `
            --clang `
            --lto=yes `
            --jobs=$(Get-Process | Measure-Object).Count `
            --enable-plugin=pyqt6 `
            --enable-plugin=data-files `
            --include-package=ui `
            --include-data-dir=icons=icons `
            --include-data-file="$(python -c 'import certifi;print(certifi.where())')=certifi/cacert.pem" `
            --windows-icon-from-ico=icon.ico `
            --output-dir=dist `
            --output-filename=Soft-K.exe `
            --remove-output `
            --follow-imports `
            --assume-yes-for-downloads `
            --verbose

      - name: ‚òÅÔ∏è Upload .exe as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Soft-K.exe
          path: dist/Soft-K.exe
          retention-days: 3