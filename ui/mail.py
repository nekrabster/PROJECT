import asyncio
from email.mime.text import MIMEText
import aiosmtplib
from PyQt6.QtWidgets import QDialog, QVBoxLayout, QLabel, QPushButton, QTextEdit, QFileDialog, QListWidget, QMessageBox, QProgressBar, QSplitter, QWidget, QFrame
from PyQt6.QtCore import Qt, QThread, pyqtSignal
class MailSenderThread(QThread):
    log_signal = pyqtSignal(str)
    progress_signal = pyqtSignal(int, int)
    finished_signal = pyqtSignal()
    def __init__(self, accounts, recipients, subject, body):
        super().__init__()
        self.accounts = accounts
        self.recipients = recipients
        self.subject = subject
        self.body = body
    def run(self, *args):
        asyncio.run(self.async_send())
    async def async_send(self, *args):
        total = len(self.recipients)
        for i, recipient in enumerate(self.recipients):
            acc = self.accounts[i % len(self.accounts)]
            smtp_host, smtp_port, login, password = acc
            message = MIMEText(self.body)
            message["From"] = login
            message["To"] = recipient
            message["Subject"] = self.subject
            try:
                await aiosmtplib.send(
                    message,
                    hostname=smtp_host,
                    port=int(smtp_port),
                    start_tls=True,
                    username=login,
                    password=password,
                )
                self.log_signal.emit(f"‚úÖ {login} ‚Üí {recipient} ‚Äî –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            except Exception as e:
                error_msg = str(e)
                if "Username and Password not accepted" in error_msg and "gmail" in smtp_host.lower():
                    self.log_signal.emit(f"‚ùå {login} ‚Üí {recipient} ‚Äî –æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Gmail")
                    self.log_signal.emit("‚ö†Ô∏è –î–ª—è Gmail —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
                    self.log_signal.emit("1. –í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Google")
                    self.log_signal.emit("2. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: Google –ê–∫–∫–∞—É–Ω—Ç ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –ü–∞—Ä–æ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
                    self.log_signal.emit("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π 16-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è")
                    self.log_signal.emit(f"4. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://support.google.com/mail/?p=BadCredentials")
                else:
                    self.log_signal.emit(f"‚ùå {login} ‚Üí {recipient} ‚Äî –æ—à–∏–±–∫–∞: {e}")
            self.progress_signal.emit(i + 1, total)
            await asyncio.sleep(0.5)
        self.finished_signal.emit()
class MailWindow(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–†–∞–±–æ—Ç–∞ —Å –ø–æ—á—Ç–æ–π")
        self.setMinimumSize(700, 500)
        main_layout = QVBoxLayout(self)
        main_layout.setSpacing(10)
        content_container = QSplitter(Qt.Orientation.Horizontal)
        settings_widget = QWidget()
        settings_layout = QVBoxLayout(settings_widget)
        settings_layout.setContentsMargins(10, 10, 10, 10)
        files_group = QFrame()
        files_group.setFrameShape(QFrame.Shape.StyledPanel)
        files_layout = QVBoxLayout(files_group)
        self.accounts_btn = QPushButton("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ—á—Ç—ã", self)
        self.accounts_btn.setToolTip("–í—ã–±–µ—Ä–∏—Ç–µ CSV –∏–ª–∏ TXT —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ—á—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n–§–æ—Ä–º–∞—Ç: smtp_host,smtp_port,login,password")
        self.accounts_btn.clicked.connect(self.load_accounts)
        files_layout.addWidget(self.accounts_btn)
        self.accounts_info = QLabel("–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã", self)
        self.accounts_info.setStyleSheet("color: #888;")
        files_layout.addWidget(self.accounts_info)
        files_layout.addSpacing(10)
        self.recipients_btn = QPushButton("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π", self)
        self.recipients_btn.setToolTip("–í—ã–±–µ—Ä–∏—Ç–µ TXT —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º email-–∞–¥—Ä–µ—Å–æ–≤ (–æ–¥–∏–Ω –Ω–∞ —Å—Ç—Ä–æ–∫—É)")
        self.recipients_btn.clicked.connect(self.load_recipients)
        files_layout.addWidget(self.recipients_btn)
        self.recipients_info = QLabel("–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã", self)
        self.recipients_info.setStyleSheet("color: #888;")
        files_layout.addWidget(self.recipients_info)
        settings_layout.addWidget(files_group)
        message_group = QFrame()
        message_group.setFrameShape(QFrame.Shape.StyledPanel)
        message_layout = QVBoxLayout(message_group)
        message_layout.addWidget(QLabel("<b>–¢–µ–º–∞ –ø–∏—Å—å–º–∞:</b>"))
        self.subject_edit = QTextEdit(self)
        self.subject_edit.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –ø–∏—Å—å–º–∞...")
        self.subject_edit.setFixedHeight(40)
        message_layout.addWidget(self.subject_edit)
        message_layout.addWidget(QLabel("<b>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>"))
        self.message_edit = QTextEdit(self)
        self.message_edit.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º...")
        message_layout.addWidget(self.message_edit)
        settings_layout.addWidget(message_group)
        self.send_btn = QPushButton("‚úâÔ∏è –ù–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", self)
        self.send_btn.setToolTip("–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∞—Å—Å–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏—Å–µ–º")
        self.send_btn.setFixedHeight(50)
        self.send_btn.clicked.connect(self.start_sending)
        settings_layout.addWidget(self.send_btn)
        content_container.addWidget(settings_widget)
        logs_widget = QWidget()
        logs_layout = QVBoxLayout(logs_widget)
        logs_layout.setContentsMargins(10, 10, 10, 10)
        logs_layout.addWidget(QLabel("<b>–ü—Ä–æ–≥—Ä–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>"))
        self.progress = QProgressBar(self)
        self.progress.setValue(0)
        logs_layout.addWidget(self.progress)
        logs_layout.addWidget(QLabel("<b>–õ–æ–≥ —Å–æ–±—ã—Ç–∏–π:</b>"))
        self.log_list = QListWidget(self)
        self.log_list.setAlternatingRowColors(True)
        logs_layout.addWidget(self.log_list)
        content_container.addWidget(logs_widget)
        content_container.setSizes([300, 400])
        main_layout.addWidget(content_container)
        self.accounts = []
        self.recipients = []
        self.sender_thread = None
    def load_accounts(self, *args):
        path, _ = QFileDialog.getOpenFileName(self, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏", "", "–§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö (*.csv *.txt)")
        if path:
            try:
                with open(path, encoding='utf-8') as f:
                    self.accounts = [line.strip().split(',') for line in f if line.strip()]
                self.accounts_info.setText(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(self.accounts)}")
                self.accounts_info.setStyleSheet("color: green;")
                self.log_list.addItem(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(self.accounts)}")
            except Exception as e:
                QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {e}")
    def load_recipients(self, *args):
        path, _ = QFileDialog.getOpenFileName(self, "–í—ã–±–µ—Ä–∏—Ç–µ TXT —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏", "", "Text Files (*.txt)")
        if path:
            try:
                with open(path, encoding='utf-8') as f:
                    self.recipients = [line.strip() for line in f if line.strip()]
                self.recipients_info.setText(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(self.recipients)}")
                self.recipients_info.setStyleSheet("color: green;")
                self.log_list.addItem(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(self.recipients)}")
            except Exception as e:
                QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {e}")
    def start_sending(self, *args):
        if not self.accounts or not self.recipients:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π!")
            return
        subject = self.subject_edit.toPlainText().strip() or "–ë–µ–∑ —Ç–µ–º—ã"
        body = self.message_edit.toPlainText().strip()
        if not body:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!")
            return
        self.log_list.addItem("üöÄ –ó–∞–ø—É—Å–∫ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...")
        self.progress.setValue(0)
        self.send_btn.setEnabled(False)
        self.sender_thread = MailSenderThread(self.accounts, self.recipients, subject, body)
        self.sender_thread.log_signal.connect(self.log_list.addItem)
        self.sender_thread.progress_signal.connect(self.update_progress)
        self.sender_thread.finished_signal.connect(self.sending_finished)
        self.sender_thread.start()
    def update_progress(self, current, total, *args):
        self.progress.setMaximum(total)
        self.progress.setValue(current)
        percent = int(current / total * 100)
        self.progress.setFormat(f"{percent}% ({current}/{total})")
        self.progress.setAlignment(Qt.AlignmentFlag.AlignCenter)
    def sending_finished(self, *args):
        self.send_btn.setEnabled(True)
        QMessageBox.information(self, "–ì–æ—Ç–æ–≤–æ", "–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
