name: Build .exe with Nuitka

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🧠 Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.1'

      - name: 📦 Install dependencies
        run: |
          pip install --upgrade pip
          pip install nuitka==2.7
          pip install -r requirements.txt

      - name: 🧹 Clean old dist/build
        shell: cmd
        run: |
          if exist dist rmdir /s /q dist
          if exist build rmdir /s /q build

      - name: 🛠 Build .exe with Nuitka
        shell: pwsh
        run: |
          nuitka `
            main.py `
            --standalone `
            --onefile `
            --remove-output `
            --output-dir=dist `
            --output-filename=Soft-K `
            --windows-icon-from-ico=icon.ico `
            --assume-yes-for-downloads `
            --follow-imports `
            --enable-plugin=pyqt6 `
            --enable-plugin=data-files `
            --include-data-dir=icons=icons `
            --include-package=ui `
            --show-modules `
            --report=build-report.txt

      - name: 🧹 Remove all .py and .pyc from ui/
        shell: pwsh
        run: |
          Get-ChildItem "ui" -Recurse -Include *.py,*.pyc -Force | Remove-Item -Force

      - name: ☁️ Upload .exe
        uses: actions/upload-artifact@v4
        with:
          name: Soft-K.exe
          path: dist\Soft-K.exe
          retention-days: 1

      - name: ☁️ Upload Nuitka report
        uses: actions/upload-artifact@v4
        with:
          name: nuitka-build-report
          path: build-report.txt
