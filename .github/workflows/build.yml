name: Build Windows EXE —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üßæ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.13.5
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.5'
          cache: 'pip'

      - name: üÜô –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
        run: python -m pip install --upgrade pip setuptools wheel

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
        run: pip install -r requirements.txt

      - name: üåô –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nuitka 2.7.10 —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏
        run: pip install nuitka==2.7.10 ordered-set zstandard

      - name: üß∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MSVC –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ LLVM Clang 18 –¥–ª—è –ª—É—á—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        uses: egor-tensin/setup-clang@v1
        with:
          version: 18

      - name: üîç –ü–æ–∏—Å–∫ –ø—É—Ç–∏ –∫ certifi —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º
        id: certifi_path
        shell: bash
        run: |
          echo "certifi_path=$(python -c 'import certifi; print(certifi.where())')" >> $GITHUB_OUTPUT
      - name: üõ† –°–±–æ—Ä–∫–∞ .exe —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏ Nuitka
        shell: pwsh
        env:
          PYTHONIOENCODING: "utf-8"
          PYTHONLEGACYWINDOWSSTDIO: "utf-8"
          NUITKA_CACHE_DIR: "${{ runner.temp }}/nuitka_cache"
        run: |
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
          $env:CC = "clang-cl"
          $env:CXX = "clang-cl"
          $env:CFLAGS = "-O3 -march=native -mtune=native -flto"
          $env:CXXFLAGS = "-O3 -march=native -mtune=native -flto"
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫—ç—à–∞
          New-Item -ItemType Directory -Force -Path "${{ runner.temp }}/nuitka_cache"
          
          python -m nuitka main.py `
            --standalone `
            --onefile `
            --remove-output `
            --output-dir=dist `
            --output-filename=Soft-K `
            --windows-icon-from-ico=icon.ico `
            --windows-company-name="SecureSoft" `
            --windows-product-name="Soft-K" `
            --windows-product-version="2.3.6" `
            --windows-file-description="–í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" `
            --windows-file-version="2.3.6.0" `
            --assume-yes-for-downloads `
            --follow-imports `
            --prefer-source-code `
            --enable-plugin=pyqt6 `
            --enable-plugin=data-files `
            --enable-plugin=multiprocessing `
            --enable-plugin=numpy `
            --disable-plugin=anti-bloat `
            --include-data-file="${{ steps.certifi_path.outputs.certifi_path }}=certifi/cacert.pem" `
            --include-data-files=icons/*.png=icons/ `
            --include-data-files=icons/*.ico=icons/ `
            --include-package=ui `
            --include-module=ui.rudich `
            --include-module=ui.complas `
            --include-module=ui.components `
            --include-module=ui.malining `
            --include-module=ui.malina `
            --include-module=ui.bombardirocrocodilo `
            --include-module=ui.newtoken `
            --include-module=ui.kachok `
            --include-module=ui.session `
            --include-module=ui.subscribe `
            --include-module=ui.session_manager `
            --include-module=ui.sim_manager `
            --include-module=ui.session_win `
            --include-module=ui.bombardo `
            --include-module=ui.okak `
            --include-module=ui.rass `
            --include-module=ui.timer `
            --include-module=ui.progress `
            --include-module=ui.thread_base `
            --include-module=ui.apphuy `
            --include-module=ui.appchuy `
            --include-module=ui.search `
            --include-module=ui.kraken `
            --include-module=ui.proxy_utils `
            --include-module=ui.mail `
            --include-module=ui.instructions `
            --include-module=ui.subs `
            --include-module=ui.damkrat `
            --include-module=ui.theme `
            --include-module=ui.styles `
            --include-module=ui.top `
            --include-module=ui.side `
            --include-module=ui.bottom `
            --include-module=ui.informatika `
            --include-module=ui.bot_manager `
            --include-module=ui.bots_win `
            --include-module=ui.gulick `
            --include-module=ui.integraly `
            --include-module=ui.kms `
            --include-module=ui.codik `
            --include-module=ui.adv `
            --include-module=ui.filya `
            --include-module=ui.decorators `
            --include-module=warnings `
            --include-module=logging `
            --clang `
            --lto=yes `
            --onefile-tempdir-spec="{CACHE_DIR}/{COMPANY}/{PRODUCT}/{VERSION}" `
            --onefile-child-grace-time=5 `
            --onefile-no-compression `
            --mingw64 `
            --jobs=0 `
            --python-flag=no_docstrings `
            --python-flag=no_annotations `
            --python-flag=no_asserts `
            --python-flag=O `
            --python-flag=-S `
            --python-flag=-B `
            --nofollow-import-to=tests,examples,setuptools,distutils,pip `
            --noinclude-default-mode=error `
            --noinclude-custom-mode=*.pyc:error `
            --report-template=compilation-report.xml `
            --quiet
            
      - name: üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        shell: pwsh
        run: |
          if (Test-Path "dist/Soft-K.exe") {
            $fileSize = (Get-Item "dist/Soft-K.exe").Length / 1MB
            Write-Host "üì¶ –†–∞–∑–º–µ—Ä –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞: $([math]::Round($fileSize, 2)) MB"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—Ç—á—ë—Ç–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
            if (Test-Path "compilation-report.xml") {
              Write-Host "üìà –û—Ç—á—ë—Ç –æ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
            }
          } else {
            Write-Host "‚ùå –§–∞–π–ª Soft-K.exe –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          }
      - name: ‚òÅÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ .exe
        uses: actions/upload-artifact@v4
        with:
          name: Soft-K-Optimized
          path: |
            dist/Soft-K.exe
            compilation-report.xml
          retention-days: 30

      - name: üìã –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤ —Å–±–æ—Ä–∫–∏ (–ø—Ä–∏ –æ—à–∏–±–∫–µ)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build_logs_failure
          path: |
            build/
            *.log
            *.xml
            nuitka-*
          retention-days: 7

      - name: üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        if: always()
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "${{ runner.temp }}/nuitka_cache"
          Write-Host "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
